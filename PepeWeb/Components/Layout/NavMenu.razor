@implements IDisposable

@using Microsoft.AspNetCore.Identity
@using PepeWeb.Data
@using PepeWeb.Data.DTO
@using PepeWeb.Services
@using System.Diagnostics

@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject TableService tableService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <p>🐸</p>
        <a class="navbar-brand" href="">Pepe Web</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                
                @foreach (TableDTO table in _userTables)
                {
                    var tableUrl = $"table/{table.Id}";

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@tableUrl">
                            <span class="bi bi-file-earmark-richtext-nav-menu" aria-hidden="true"></span> @table.Name
                        </NavLink>
                    </div>
                }

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> 
                            @if (user != null)
                            {
                                @user.Nickname
                            }
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>

            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private ApplicationUser user;
    private string? currentUrl;

    private List<TableDTO> _userTables = new List<TableDTO>();

    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var claimsPrincipal = authState.User;

        if (claimsPrincipal.Identity?.IsAuthenticated == true)
        {
            // Retrieve the ApplicationUser using UserManager
            user = await UserManager.GetUserAsync(claimsPrincipal);
        }

        _userTables = await tableService.GetUserTables();

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {

        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

